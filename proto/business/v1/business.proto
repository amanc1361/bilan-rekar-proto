syntax = "proto3";

package business;

option go_package = "github.com/amanc1361/bilan-rekar/gen/proto/business/v1";

import "google/protobuf/empty.proto";
import "proto/user/v1/user.proto";

// Business message represents a business entity
message Business {
  uint64 id = 1;
  uint64 owner_id = 2;
  string name = 3;
  string description = 4;
  
  // References - typically handled differently in protobuf
  user.User owner = 5;  // Only included when needed
}

// Request and response messages for BusinessService

message CreateBusinessRequest {
  string name = 1;
  uint64 owner_id = 2;
  string description = 3;
}

message BusinessResponse {
  Business business = 1;
  bool success = 2;
  string message = 3;
}

message GetBusinessByIDRequest {
  uint64 id = 1;
}

message GetBusinessesByOwnerIDRequest {
  uint64 owner_id = 1;
}

message GetBusinessesByOwnerIDResponse {
  repeated Business businesses = 1;
}

message GetBusinessByNameRequest {
  string name = 1;
}

message GetBusinessWithUsersRequest {
  uint64 id = 1;
}

message GetBusinessWithUsersResponse {
  Business business = 1;
  repeated user.User users = 2;
}

message GetBusinessWithFinancialPeriodsRequest {
  uint64 id = 1;
}

message FinancialPeriod {
  uint64 id = 1;
  string period = 2;
  int32 year = 3;
  // Other financial period fields as needed
}

message GetBusinessWithFinancialPeriodsResponse {
  Business business = 1;
  repeated FinancialPeriod financial_periods = 2;
}

message AddUserToBusinessRequest {
  uint64 business_id = 1;
  uint64 user_id = 2;
}

message RemoveUserFromBusinessRequest {
  uint64 business_id = 1;
  uint64 user_id = 2;
}

message GetBusinessUsersRequest {
  uint64 business_id = 1;
}

message GetBusinessUsersResponse {
  uint64 business_id = 1;
  repeated user.User users = 2;
}

message GetBusinessFinancialPeriodsRequest {
  uint64 business_id = 1;
}

message GetBusinessFinancialPeriodsResponse {
  uint64 business_id = 1;
  repeated FinancialPeriod financial_periods = 2;
}

message StatusResponse {
  bool success = 1;
  string message = 2;
}

// Business service
service BusinessService {
  // Basic CRUD operations
  rpc CreateBusiness(CreateBusinessRequest) returns (BusinessResponse);
  rpc GetBusinessByID(GetBusinessByIDRequest) returns (BusinessResponse);
  
  // Business specific operations
  rpc GetBusinessesByOwnerID(GetBusinessesByOwnerIDRequest) returns (GetBusinessesByOwnerIDResponse);
  rpc GetBusinessByName(GetBusinessByNameRequest) returns (BusinessResponse);
  rpc GetBusinessWithUsers(GetBusinessWithUsersRequest) returns (GetBusinessWithUsersResponse);
  rpc GetBusinessWithFinancialPeriods(GetBusinessWithFinancialPeriodsRequest) returns (GetBusinessWithFinancialPeriodsResponse);
  
  // User management
  rpc AddUserToBusiness(AddUserToBusinessRequest) returns (StatusResponse);
  rpc RemoveUserFromBusiness(RemoveUserFromBusinessRequest) returns (StatusResponse);
  rpc GetBusinessUsers(GetBusinessUsersRequest) returns (GetBusinessUsersResponse);
  
  // Financial period management
  rpc GetBusinessFinancialPeriods(GetBusinessFinancialPeriodsRequest) returns (GetBusinessFinancialPeriodsResponse);
} 