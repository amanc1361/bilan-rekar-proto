syntax = "proto3";

package financial.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "proto/user/v1/user.proto";


option go_package = "github.com/amanc1361/bilan-rekar-proto/gen/proto/financial/v1";





// FinancialPeriod message represents a financial period entity
message FinancialPeriod {
  uint64 id = 1;
  uint64 business_id = 2;
  string name = 3;
  google.protobuf.Timestamp start = 4;
  google.protobuf.Timestamp end = 5;
  string description = 6;
  bool is_closed = 7;
  
 
}

// Request and response messages for FinancialService

message CreateFinancialPeriodRequest {
  uint64 business_id = 1;
  string name = 2;
  google.protobuf.Timestamp start = 3;
  google.protobuf.Timestamp end = 4;
  string description = 5;
}

message FinancialPeriodResponse {
  FinancialPeriod period = 1;
  bool success = 2;
  string message = 3;
}

message GetFinancialPeriodByIDRequest {
  uint64 id = 1;
}

message GetFinancialPeriodByBusinessIDRequest {
  uint64 business_id = 1;
}

message GetFinancialPeriodByUserIDRequest {
  uint64 user_id = 1;
}

message GetFinancialPeriodByBusinessIDAndUserIDRequest {
  uint64 business_id = 1;
  uint64 user_id = 2;
}

message GetFinancialPeriodByBusinessIDAndUserIDAndPeriodRequest {
  uint64 business_id = 1;
  uint64 user_id = 2;
  string period = 3;
}

message GetFinancialPeriodByBusinessIDAndUserIDAndPeriodAndYearRequest {
  uint64 business_id = 1;
  uint64 user_id = 2;
  string period = 3;
  int32 year = 4;
}

message CloseFinancialPeriodRequest {
  uint64 id = 1;
}

message ReopenFinancialPeriodRequest {
  uint64 id = 1;
}

message GetFinancialPeriodsByUserIDRequest {
  uint64 user_id = 1;
}

message GetFinancialPeriodsResponse {
  repeated FinancialPeriod periods = 1;
}

message AddUserToFinancialPeriodRequest {
  uint64 period_id = 1;
  uint64 user_id = 2;
}

message RemoveUserFromFinancialPeriodRequest {
  uint64 period_id = 1;
  uint64 user_id = 2;
}

message GetFinancialPeriodsByBusinessIDRequest {
  uint64 business_id = 1;
}

message AddBusinessToFinancialPeriodRequest {
  uint64 period_id = 1;
  uint64 business_id = 2;
}

message RemoveBusinessFromFinancialPeriodRequest {
  uint64 period_id = 1;
  uint64 business_id = 2;
}





message StatusResponse {
  bool success = 1;
  string message = 2;
}

// Financial service
service FinancialService {
  // Basic CRUD operations
  rpc CreateFinancialPeriod(CreateFinancialPeriodRequest) returns (FinancialPeriodResponse);
  rpc GetFinancialPeriodByID(GetFinancialPeriodByIDRequest) returns (FinancialPeriodResponse);
  
  // Financial period queries
  rpc GetFinancialPeriodByBusinessID(GetFinancialPeriodByBusinessIDRequest) returns (FinancialPeriodResponse);
  rpc GetFinancialPeriodByUserID(GetFinancialPeriodByUserIDRequest) returns (FinancialPeriodResponse);
  rpc GetFinancialPeriodByBusinessIDAndUserID(GetFinancialPeriodByBusinessIDAndUserIDRequest) returns (FinancialPeriodResponse);
  rpc GetFinancialPeriodByBusinessIDAndUserIDAndPeriod(GetFinancialPeriodByBusinessIDAndUserIDAndPeriodRequest) returns (FinancialPeriodResponse);
  rpc GetFinancialPeriodByBusinessIDAndUserIDAndPeriodAndYear(GetFinancialPeriodByBusinessIDAndUserIDAndPeriodAndYearRequest) returns (FinancialPeriodResponse);
  
  // Status operations
  rpc CloseFinancialPeriod(CloseFinancialPeriodRequest) returns (StatusResponse);
  rpc ReopenFinancialPeriod(ReopenFinancialPeriodRequest) returns (StatusResponse);
  
  // User access operations
  rpc GetFinancialPeriodsByUserID(GetFinancialPeriodsByUserIDRequest) returns (GetFinancialPeriodsResponse);
  rpc AddUserToFinancialPeriod(AddUserToFinancialPeriodRequest) returns (StatusResponse);
  rpc RemoveUserFromFinancialPeriod(RemoveUserFromFinancialPeriodRequest) returns (StatusResponse);
  
  // Business access operations
  rpc GetFinancialPeriodsByBusinessID(GetFinancialPeriodsByBusinessIDRequest) returns (GetFinancialPeriodsResponse);
  rpc AddBusinessToFinancialPeriod(AddBusinessToFinancialPeriodRequest) returns (StatusResponse);
  rpc RemoveBusinessFromFinancialPeriod(RemoveBusinessFromFinancialPeriodRequest) returns (StatusResponse);
}