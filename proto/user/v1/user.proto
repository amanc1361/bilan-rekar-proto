syntax = "proto3";

package user;

option go_package = "github.com/bilan-rekar-proto/gen/go/user/v1;userv1";

import "google/protobuf/timestamp.proto";

// User message represents a user in the system
message User {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  google.protobuf.Timestamp deleted_at = 4;
  string name = 5;
  string family = 6;
  string mobile = 7;
  string email = 8;
  string username = 9;
  string password = 10;
  uint32 role_id = 11;
}

// CreateUserRequest represents a request to create a new user
message CreateUserRequest {
  string name = 1;
  string family = 2;
  string mobile = 3;
  string email = 4;
  string username = 5;
  string password = 6;
  uint32 role_id = 7;
}

// CreateUserResponse represents the response after creating a user
message CreateUserResponse {
  User user = 1;
}

// GetUserRequest represents a request to get a user by ID
message GetUserRequest {
  string id = 1;
}

// GetUserResponse represents the response containing a user
message GetUserResponse {
  User user = 1;
}

// UpdateUserRequest represents a request to update a user
message UpdateUserRequest {
  User user = 1;
}

// UpdateUserResponse represents the response after updating a user
message UpdateUserResponse {
  User user = 1;
}

// DeleteUserRequest represents a request to delete a user
message DeleteUserRequest {
  string id = 1;
}

// DeleteUserResponse represents the response after deleting a user
message DeleteUserResponse {}

// ListUsersRequest represents a request to list all users
message ListUsersRequest {}

// ListUsersResponse represents the response containing a list of users
message ListUsersResponse {
  repeated User users = 1;
}

// UserService defines the gRPC service for user operations
service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
} 